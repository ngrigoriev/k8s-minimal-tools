# Makes a release of rsyslogd-forwarder
#

name: release-rsyslogd-forwarder
run-name: ${{ github.actor }} is preparing release of rsyslogd-forwarder
on:
  workflow_dispatch:
  push:
    tags:
      - "rsyslogd-forwarder-v*"

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/rsyslogd-forwarder

jobs:
  docker:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
#         - linux/arm/v6
#         - linux/arm/v7
#         - linux/arm64
    steps:
      - name: Prepare
        run: |
          platform=${{ matrix.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV
      - name: Install Cosign
        uses: sigstore/cosign-installer@v3.3.0
      - name: Check Cosign install!
        run: cosign version
      - name: checkout
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5.5.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          flavor: |
            latest=true
          tags: |
            type=match,pattern=rsyslogd-forwarder-(v.*),group=1

      - name: Build and push
        uses: docker/build-push-action@v5.1.0
        with:
          context: docker/rsyslogd-forwarder
          platforms: ${{ matrix.platform }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          push: true

      - name: Sign the published Docker image
        env:
          TAGS: ${{ steps.meta.outputs.tags }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}
